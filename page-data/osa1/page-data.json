{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa1",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Osa 1 - Aloitus\",\n  \"nav_order\": 2,\n  \"hidden\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"T\\xE4ll\\xE4 kurssilla opit ohjelmoinnin perusteita. Kurssi alkaa alkeista ja syventyy pikkuhiljaa. Ennen kuin aloitamme koodaamisen, meid\\xE4n t\\xE4ytyy tiet\\xE4\\xE4, mit\\xE4 koodaaminen on.\"), mdx(\"p\", null, \"Ohjelmointi on ohjelmistojen suunnittelua ja toteutusta. Ohjelmia (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"software\"), \" tai \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"program\"), \") toteutetaan (eli kirjoitetaan tai \\\"koodataan\\\") tyypillisesti ihmisten kirjoitettavaksi ja luettavaksi tarkoitetulla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ohjelmointikielell\\xE4\"), \".\"), mdx(\"p\", null, \"Ohjelmointikieli\\xE4 on satoja ja t\\xE4ll\\xE4 kurssilla keskityt\\xE4\\xE4n n\\xE4ist\\xE4 kielist\\xE4 yhteen. Kurssin kielen\\xE4 on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"C#\"), \". Voit l\\xF6yt\\xE4\\xE4 lis\\xE4\\xE4 tietoa kielest\\xE4 englanniksi \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/dotnet/csharp/tour-of-csharp/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"t\\xE4\\xE4lt\\xE4\")), \". Kyseisell\\xE4 kielell\\xE4 on hyv\\xE4 dokumentaatio ja sielt\\xE4 l\\xF6ytyy my\\xF6s kurssille tarpeellista tietoa.\"), mdx(\"p\", null, \"Ohjelmointikielet tarjoavat monia \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"metodeja\"), \" ja \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"komentoja\"), \" valmiiksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sis\\xE4\\xE4nrakennettuna\"), \" T\\xE4ten meid\\xE4n ei tarvitse toteuttaa aivan kaikkea itse. Iso osa ohjelmoinnista onkin ohjelmointikielen valmiiksi tarjoamien komentojen soveltamista ongelmien ratkaisuissa. Kirjoitettua \\\"koodia\\\" kutsutaan l\\xE4hdekoodiksi (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"source code\"), \"). L\\xE4hdekoodi koostuu lauseista (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"statement\"), \") ja lausekkeista (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"expression\"), \"), joita yleens\\xE4 voidaan lukea rivi rivilt\\xE4 ylh\\xE4\\xE4lt\\xE4 alasp\\xE4in ja vasemmalta oikealle.\"), mdx(\"p\", null, \"Meid\\xE4n C# -ohjelmamme vaativat tietynlaisen rungon toimiakseen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"public class Program {\\n    public static void Main(string[] args)\\n    {\\n        // Add your statements here\\n    }\\n}\\n\")), mdx(\"p\", null, \"Rungossa on monia osia, joista moni on valmiiksi luotu. Me keskitymme niihin my\\xF6hemmin t\\xE4m\\xE4n kurssin aikana.\"), mdx(\"p\", null, \"T\\xE4ll\\xE4 hetkell\\xE4 riitt\\xE4\\xE4 ett\\xE4 tied\\xE4t, ett\\xE4 jokaisessa ohjelmassa on koodia joka on valmiiiksi kirjoitettu. Kaikkea ei tarvitse kirjoittaa itse. Jokaisessa ohjelmointikieless\\xE4 on ominaisuuksia, joita tarvitaan koodin py\\xF6ritt\\xE4miseen.\"), mdx(\"h2\", {\n    \"id\": \"ohjelman-ajaminen\"\n  }, \"Ohjelman ajaminen\"), mdx(\"p\", null, \"Kun haluat kokeilla, toimiiko l\\xE4hdekoodisi, sin\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ajat ohjelman\"), \". T\\xE4m\\xE4 tarkoittaa k\\xE4yt\\xE4nn\\xF6ss\\xE4 kahta vaihetta: Ensin koodi pit\\xE4\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"k\\xE4\\xE4nt\\xE4\\xE4\"), \". Toinen vaihe on ohjelman ajaminen. Onneksi k\\xE4\\xE4nt\\xE4minen ja ajaminen voidaan yleens\\xE4 tehd\\xE4 melko automaattisesti, omalla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"k\\xE4\\xE4nt\\xE4j\\xE4ll\\xE4\"), \". Nykyaikaisilla kehitysty\\xF6kaluilla k\\xE4\\xE4nt\\xE4minen ja ajaminen tapahtuu yhdell\\xE4 komennolla, tai jopa napin painalluksella.\"), mdx(\"p\", null, \"Kun k\\xE4\\xE4nn\\xE4t koodin, C# k\\xE4\\xE4nt\\xE4j\\xE4 k\\xE4\\xE4nt\\xE4\\xE4 l\\xE4hdekoodin moduuliin, joka muutetaan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tulkittavaksi paketiksi\"), \". Paketti sis\\xE4lt\\xE4\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"v\\xE4likielen\"), \" (Intermediate Language, IL) yhdess\\xE4 koodin \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"metadatan\"), \" kanssa. Dotnetin \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Common Language Runtime\"), \" (CLR) toimii paketin kanssa. Se lataa paketin ja muuntaa sen \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"konekieleksi\"), \". T\\xE4m\\xE4n j\\xE4lkeen k\\xE4ytt\\xF6j\\xE4rjestelm\\xE4 suorittaa konekielen ja tulostaa ohjelman tuloksen.\"), mdx(\"p\", null, \"Kuten huomataan, k\\xE4\\xE4nt\\xE4misprosessi on melko monimutkainen toimenpide, jossa ihmisluettava koodi k\\xE4\\xE4ntyy konekielisemm\\xE4ksi. Me keskitymme kuitenkin ihmislukuisempaan puoleen.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#ohjelman-ajaminen","title":"Ohjelman ajaminen"}]},"frontmatter":{"title":"Osa 1 - Aloitus"}}},"pageContext":{"id":"db0378b5-ba89-592c-a775-7c4d6eecdcd1"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}