{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa2/osa2-1",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Aliongelmat\",\n  \"nav_order\": 1,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Exercise = makeShortcode(\"Exercise\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"käyttäjän-syötteen-lukeminen\"\n  }, \"K\\xE4ytt\\xE4j\\xE4n sy\\xF6tteen lukeminen\"), mdx(\"p\", null, \"Ratkaisumalli ohjelmointiteht\\xE4viss\\xE4 k\\xE4ytt\\xE4j\\xE4n sy\\xF6tteen (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"input\"), \") lukemiseen on suoraviivainen. T\\xE4h\\xE4n teht\\xE4v\\xE4\\xE4n k\\xE4yt\\xE4mme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"System.Console.ReadLine();\"), \" -komentoa. Useimmissa tapauksissa haluamme k\\xE4ytt\\xE4\\xE4 komentoa useammin kuin kerran, tai k\\xE4ytt\\xE4\\xE4 muita \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"System\"), \":n metodeja. T\\xE4t\\xE4 varten meill\\xE4 on ohjelmassa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using System;\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"using System;\\n\\npublic class Program\\n{\\n  public static void Main(string[] args)\\n  {\\n    Console.ReadLine();\\n    // More code...\\n  }\\n}\\n\\n\")), mdx(\"p\", null, \"T\\xE4ss\\xE4 materiaalissa oletamme t\\xE4m\\xE4n perusrakenteen olevan olemassa, eik\\xE4 sit\\xE4 sis\\xE4llytet\\xE4 esimerkkikoodeihin.\"), mdx(\"h2\", {\n    \"id\": \"laskeminen\"\n  }, \"Laskeminen\"), mdx(\"p\", null, \"Ohjelmassa tarvitsemme usein laskutoimituksia, kuten keskiarvon tai summan laskemista. Ratkaisumalli t\\xE4llaisen ongelman ratkaisemiseen on seuraava:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xE4\\xE4rittele laskutoimituksessa tarvittavat sy\\xF6tteet ja varaa niille muuttujat. Sy\\xF6te tarkoittaa laskutoimituksessa k\\xE4ytett\\xE4vi\\xE4 arvoja. Sy\\xF6tteiden tyypin voi yleens\\xE4 p\\xE4\\xE4tell\\xE4 ongelman kuvauksesta.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xE4\\xE4rittele laskutoimitus ja varaa muuttuja laskutoimituksen tulokselle. Suorita laskutoimitus sy\\xF6tteill\\xE4 ja sijoita tulos sille varattuun muuttujaan. Tuloksen tyyppi voidaan yleens\\xE4 p\\xE4\\xE4tell\\xE4 ongelman kuvauksesta.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kun laskutoimitus on suoritettu, tee sen tulokselle jotain. T\\xE4m\\xE4 voi tarkoittaa tuloksen tulostamista, tai esimerkiksi keskiarvon laskemisessa summan jakamista lukujen m\\xE4\\xE4r\\xE4ll\\xE4.\")), mdx(\"p\", null, \"Esimerkiksi, jos haluamme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"luoda ohjelman joka laskee kahden kokonaisluvun summan\"), \", ratkaisumalli on seuraava:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Tunnistetaan sy\\xF6tteet ja varataan niille muuttujat\\nint first = 1;\\nint second = 2;\\n\\n// Tunnistetaan laskutoimitus ja varataan muuttuja tulokselle\\nint sum = first + second;\\n\\n// Tulostetaan laskutoimituksen tulos\\nConsole.WriteLine(\\\"The sum of \\\" + first + \\\" and \\\" + second + \\\" is \\\" + sum);\\n\")), mdx(\"p\", null, \"Ohjelma joka sek\\xE4 lukee ja laskee yhdist\\xE4\\xE4 n\\xE4m\\xE4 ratkaisumallit. Ohjelma joka laskee kahden kokonaisluvun tulon n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Tunnistetaan sy\\xF6tteet ja varataan niille muuttujat\\nint first = 1;\\nint second = 2;\\n\\n// Nimitet\\xE4\\xE4n k\\xE4ytt\\xE4j\\xE4n sy\\xF6te muuttujiin\\nfirst = Convert.ToInt32(Console.ReadLine());\\nsecond = Convert.ToInt32(Console.ReadLine());\\n\\n// Tunnistetaan laskutoimitus ja varataan muuttuja tulokselle\\nint product = first * second;\\n\\n// Tulostetaan laskutoimituksen tulos\\nConsole.WriteLine(\\\"The product of \\\" + first + \\\" and \\\" + second + \\\" is \\\" + product);\\n\")), mdx(\"p\", null, \"Yll\\xE4 olevassa esimerkiss\\xE4, ohjelma on toteutettu niin ett\\xE4 muuttujat m\\xE4\\xE4ritell\\xE4\\xE4n ensin, jonka j\\xE4lkeen arvot luetaan niihin. Muuttujien m\\xE4\\xE4rittely ja arvojen lukeminen niihin voidaan my\\xF6s yhdist\\xE4\\xE4 yhdeksi.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"int first = Convert.ToInt32(Console.ReadLine());\\nint second = Convert.ToInt32(Console.ReadLine());\\n\\nint product = first * second;\\n\\nConsole.WriteLine(\\\"The product of \\\" + first + \\\" and \\\" + second + \\\" is \\\" + product);\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"vähän-vaihtoehtoista-toimintaan\"\n  }, \"V\\xE4h\\xE4n vaihtoehtoista toimintaan\"), mdx(\"p\", null, \"Ongelmat sis\\xE4lt\\xE4v\\xE4t usein jonkin vaihtoehtoisen toiminnon, ja t\\xE4ll\\xF6in k\\xE4yt\\xE4mme ehtolauseita. Ehtolause alkaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"if\"), \" -komennolla, jonka j\\xE4lkeen tulee sulkujen sis\\xE4\\xE4n lauseke. Lauseke arvioi joko todeksi tai ep\\xE4todeksi. Jos lauseke arvioi todeksi, suoritetaan seuraava aaltosulkeilla rajattu lohko.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Jos arvo on enemm\\xE4n kuin viisi\\nif (value > 5)\\n{\\n    // sitten...\\n}\\n\")), mdx(\"p\", null, \"Ohjelma joka tulostaa \\\"ok\\\" jos muuttujan arvo on suurempi kuin 42, ja muuten tulostaa \\\"not ok\\\" n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"int value = 15;\\nif (value > 42)\\n{\\n    Console.WriteLine(\\\"ok\\\");\\n}\\nelse\\n{\\n    Console.WriteLine(\\\"not ok\\\");\\n}\\n\")), mdx(\"p\", null, \"Voit my\\xF6s ketjuttaa useita ehtoja. T\\xE4ll\\xF6in ongelma muuttuu muotoon \\\"jos a, niin b; muuten jos c, niin d; muuten jos e, niin f; muuten g\\\". Ketju koostuu if-lauseesta, jota seuraa else if-lauseita, joissa kussakin on oma lauseke ja lohko.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Jos arvo on enemm\\xE4n kuin viisi\\nif (value > 5)\\n{\\n    // Toiminnallisuus kun arvo on suurempi kuin viisi\\n}\\nelse if (value < 0)\\n{\\n    // Toiminallisuus kun arvo on pienempi kuin nolla\\n    // ja arvo EI OLE suurempi kuin viisi\\n}\\nelse // muussa tapauksessa\\n{\\n    // Toiminnallisuus muissa tapauksissa\\n}\\n\")), mdx(\"p\", null, \"Ehdollinen toiminnallisuus voidaan yhdist\\xE4\\xE4 muihin ratkaisumalleihin. Katsotaan ongelma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\"Lue kaksi kokonaislukua k\\xE4ytt\\xE4j\\xE4lt\\xE4. Jos lukujen summa on yli 100, tulosta too much. Jos summa on alle 0, tulosta too little. Muuten tulosta ok.\\\"\"), \" Ohjelma alla yhdist\\xE4\\xE4 lukemisen, laskemisen ja ehdollisen toiminnallisuuden.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Julistetaan muuttujat ja luetaan k\\xE4ytt\\xE4j\\xE4n sy\\xF6te niihin\\nint first = Convert.ToInt32(Console.ReadLine());\\nint second = Convert.ToInt32(Console.ReadLine());\\n\\n// Tunnistetaan laskutoimitus ja varataan muuttuja tulokselle\\nint sum = first + second;\\n\\n// Tehd\\xE4\\xE4n tuloksella jotain. T\\xE4ss\\xE4 tapauksessa\\n// tulosta k\\xE4ytet\\xE4\\xE4n ehdollisissa operaatioissa.\\n\\nif (sum > 100) // jos summa on yli 100\\n{\\n    Console.WriteLine(\\\"too much\\\");\\n}\\nelse if (sum < 0) // jos summa on alle 0\\n{\\n    Console.WriteLine(\\\"too little\\\");\\n}\\nelse // muussa tapauksessa\\n{\\n    Console.WriteLine(\\\"ok\\\");\\n}\\n\")), mdx(\"h1\", {\n    \"id\": \"tehtävät\"\n  }, \"Teht\\xE4v\\xE4t\"), mdx(Exercise, {\n    title: '001 Second power',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma, joka lukee kokonaisluvun k\\xE4ytt\\xE4j\\xE4lt\\xE4, ja tulostaa luvun toisen potenssin, eli luvun kerrottuna itsell\\xE4\\xE4n.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 4\\n16\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 5\\n25\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> -3\\n9\\n\"))), mdx(Exercise, {\n    title: '002 Square root of sum',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma, joka lukee kaksi kokonaislukua k\\xE4ytt\\xE4j\\xE4lt\\xE4, ja tulostaa n\\xE4iden lukujen summan neli\\xF6juuren. Ohjelman ei tarvitse toimia negatiivisilla luvuilla.\"), mdx(\"p\", null, \"Saat neli\\xF6juuren laskettua kokonaisluvusta komennolla Math.Sqrt t\\xE4h\\xE4n tapaan:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"int number = 42;\\ndouble squareRoot = Math.Sqrt(number);\\nConsole.WriteLine(squareRoot);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 1 \\n> 0 \\n1\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 5 \\n> 4 \\n3\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 1 \\n> 35 \\n6\\n\"))), mdx(Exercise, {\n    title: '003 Absolute value',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma, joka lukee kokonaisluvun k\\xE4ytt\\xE4j\\xE4lt\\xE4. Jos luku on alle 0, tulosta luku kerrottuna -1:ll\\xE4. Muussa tapauksessa tulosta luku sellaisenaan. Muutama esimerkki ohjelman odotetusta toiminnasta:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> -3\\n3\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 1\\n1\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 0\\n0\\n\"))), mdx(Exercise, {\n    title: '004 Comparison',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka lukee kaksi kokonaislukua k\\xE4ytt\\xE4j\\xE4lt\\xE4. Jos ensimm\\xE4inen luku on suurempi kuin toinen, tulosta \\\"(first) is greater than (second).\\\" Jos toinen luku on suurempi kuin ensimm\\xE4inen, tulosta \\\"(first) is less than (second).\\\" Muussa tapauksessa tulosta \\\"(first) is equal to (second).\\\" (first) ja (second) tulee korvata k\\xE4ytt\\xE4j\\xE4n antamilla luvuilla.\"), mdx(\"p\", null, \"Muutama esimerkki ohjelman odotetusta toiminnasta:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 8 \\n> 4 \\n8 is greater than 4.\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> -3 \\n> 5 \\n-3 is less than 5.\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> 1 \\n> 1 \\n1 is equal to 1.\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#käyttäjän-syötteen-lukeminen","title":"Käyttäjän syötteen lukeminen"},{"url":"#laskeminen","title":"Laskeminen"},{"url":"#vähän-vaihtoehtoista-toimintaan","title":"Vähän vaihtoehtoista toimintaan"}]},{"url":"#tehtävät","title":"Tehtävät"}]},"frontmatter":{"title":"Aliongelmat"}}},"pageContext":{"id":"42452093-3c2b-5a3d-9042-0c0ea5f56761"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}