{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa3/osa3-4",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Merkkijonot\",\n  \"nav_order\": 4,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Exercise = makeShortcode(\"Exercise\");\nvar Note = makeShortcode(\"Note\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Kerrataan alkuun mit\\xE4 tied\\xE4mme merkkijonoista ja katsotaan sen j\\xE4lkeen miten niit\\xE4 voidaan jakaa. Luodaan ensin merkkijonon sis\\xE4lt\\xE4v\\xE4 muuttuja magicWord, joka saa arvon \\\"abracadabra\\\".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string magicWord = \\\"abracadabra\\\";\\n\")), mdx(\"p\", null, \"Merkkijonon antaminen parametrina tulostuskomennolle (tai muillekin merkkijonoparametrin ottaville metodeille) tapahtuu tuttuun tapaan:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string magicWord = \\\"abracadabra\\\";\\nConsole.WriteLine(magicWord);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"abracadabra\\n\")), mdx(\"h2\", {\n    \"id\": \"merkkijonon-lukeminen-ja-tulostaminen\"\n  }, \"Merkkijonon lukeminen ja tulostaminen\"), mdx(\"p\", null, \"Voit lukea merkkijonon ReadLine-metodilla, jota Console tarjoaa. Alla oleva ohjelma lukee k\\xE4ytt\\xE4j\\xE4n nimen ja tulostaa sen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"Console.WriteLine(\\\"What's your name?\\\");\\n// luetaan k\\xE4ytt\\xE4j\\xE4n sy\\xF6te ja sijoitetaan se name-muuttujaan\\nstring name = Console.ReadLine();\\n\\nConsole.WriteLine(name);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"What's your name?\\n> Hank\\nHank\\n\")), mdx(\"p\", null, \"Merkkijonoja voi my\\xF6s konkatenoida (eli yhdist\\xE4\\xE4). Jos laitat + -operaattorin kahden merkkijonon v\\xE4liin, saat uuden merkkijonon, joka on n\\xE4iden kahden merkkijonon yhdistelm\\xE4. Kiinnit\\xE4 huomiota v\\xE4lily\\xF6nteihin!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string greeting = \\\"Hi \\\";\\nstring name = \\\"Lily\\\";\\nstring goodbye = \\\" and see you later!\\\";\\n\\nstring phrase = greeting + name + goodbye;\\n\\nConsole.WriteLine(phrase);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Hi Lily and see you later!\\n\")), mdx(\"h2\", {\n    \"id\": \"merkkijonojen-vertailu\"\n  }, \"Merkkijonojen vertailu\"), mdx(\"p\", null, \"Merkkijonoa voidaan verrata toiseen merkkijonoon \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"==\"), \" -operaattorilla kuten muihinkin muuttujiin.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string text = \\\"Hello\\\";\\nstring word = \\\"Hullo\\\";\\n\\nif (text == word)\\n{\\n  Console.WriteLine(\\\"Hooray!\\\");\\n}\\nelse\\n{\\n  Console.WriteLine(\\\"Boo\\\");\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Boo\\n\")), mdx(\"p\", null, \"Kuten olemme jo tottuneet, boolean-arvo voidaan k\\xE4\\xE4nt\\xE4\\xE4 negaatiolla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"!\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string text = \\\"Hello\\\";\\nstring word = \\\"Hullo\\\";\\n\\nif (!(text == word))\\n{\\n  Console.WriteLine(\\\"Boo!\\\");\\n}\\nelse\\n{\\n  Console.WriteLine(\\\"Hooray!\\\");\\n}\\n\")), mdx(\"p\", null, \"Tai vertailun negaatiolla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"!=\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string text = \\\"Hello\\\";\\nstring word = \\\"Hullo\\\";\\n\\nif (text != word)\\n{\\n  Console.WriteLine(\\\"Boo!\\\");\\n}\\nelse\\n{\\n  Console.WriteLine(\\\"Hooray!\\\");\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"merkkijonon-jakaminen\"\n  }, \"Merkkijonon jakaminen\"), mdx(\"p\", null, \"Voit jakaa merkkijonon useampaan osaan merkkijonon \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Split-metodilla\"), \". Metodi ottaa parametrina merkkijonon, jonka kohdalta merkkijono jaetaan. Split-metodi palauttaa taulukon, jossa on jaetun merkkijonon osat (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"substring\"), \"). Alla olevassa esimerkiss\\xE4 merkkijono on jaettu v\\xE4lily\\xF6nnin kohdalta.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string text = \\\"first second third fourth\\\";\\nstring[] pieces = text.Split(\\\" \\\");\\nConsole.WriteLine(pieces[0]);\\nConsole.WriteLine(pieces[1]);\\nConsole.WriteLine(pieces[2]);\\nConsole.WriteLine(pieces[3]);\\n\\n// Tulostetaan tyhj\\xE4 rivi v\\xE4liin\\nConsole.WriteLine();\\n\\nfor (int i = 0; i < pieces.Length; i++)\\n{\\n  Console.WriteLine(pieces[i]);\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"first\\nsecond\\nthird\\nfourth\\n\\nfirst\\nsecond\\nthird\\nfourth\\n\")), mdx(\"h2\", {\n    \"id\": \"kiinte채n-muotoisen-datan-k채sittely\"\n  }, \"Kiinte\\xE4n muotoisen datan k\\xE4sittely\"), mdx(\"p\", null, \"Merkkijonon jakaminen on k\\xE4tev\\xE4\\xE4 erityisesti silloin, kun data on kiinte\\xE4ss\\xE4 muodossa. T\\xE4ll\\xE4 tarkoitetaan dataa, joka noudattaa jotain ennalta m\\xE4\\xE4ritelty\\xE4 formaattia. Esimerkki t\\xE4llaisesta on pilkuilla erotettu data (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"comma-separated values\"), \", csv), jossa pilkut erottavat arvot toisistaan. Alla on esimerkki csv-muotoisesta datasta, jossa on nimi\\xE4 ja ik\\xE4. Ensimm\\xE4isess\\xE4 sarakkeessa on nimi\\xE4 ja toisessa ik\\xE4. Saraakkeet on erotettu pilkulla.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"sebastian,2 \\nlucas,2 \\nlily,1\\n\")), mdx(\"p\", null, \"Oletetaan ett\\xE4 k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 yll\\xE4 olevan datan rivi rivilt\\xE4, lopettaen tyhj\\xE4ll\\xE4 rivill\\xE4.\"), mdx(\"p\", null, \"Ohjelma tulostaa nimet ja i\\xE4t seuraavasti:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"while (true)\\n{\\n  string input = Console.ReadLine();\\n  if (input == \\\"\\\")\\n  {\\n    break;\\n  }\\n  string[] pieces = input.Split(\\\",\\\");\\n  Console.WriteLine(\\\"Name: \\\" + pieces[0] + \\\", age: \\\" + pieces[1]);\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> sebastian,2 \\nName: sebastian, age: 2 \\n> lucas,2 \\nName: lucas, age: 2 \\n> lily,1 \\nName: lily, age: 1\\n\")), mdx(\"h2\", {\n    \"id\": \"monimuotoisen-tekstin-k채ytt채minen\"\n  }, \"Monimuotoisen tekstin k\\xE4ytt\\xE4minen\"), mdx(\"p\", null, \"Olemme tulostaneet merkkijonoja aiemmissa esimerkeiss\\xE4. Kiinte\\xE4ss\\xE4 muodossa olevassa merkkijonossa voi olla my\\xF6s numeerista dataa. Yll\\xE4 olevassa esimerkiss\\xE4, jossa oli nimi\\xE4 ja ik\\xE4, ik\\xE4 oli kokonaisluku.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"sebastian,2 \\nlucas,2 \\nlily,1\\n\")), mdx(\"p\", null, \"Merkkijonon jakaminen tuottaa aina taulukon merkkijonoja. Jos teksti on kiinte\\xE4ss\\xE4 muodossa, voimme olettaa tietyn indeksin olevan aina tietyn tyyppinen. Esimerkiksi yll\\xE4 olevassa esimerkiss\\xE4 ik\\xE4 indeksiss\\xE4 1 on kokonaisluku.\"), mdx(\"p\", null, \"Alla oleva ohjelma laskee summan t\\xE4st\\xE4 datasta. Jotta voisimme laskea summan, meid\\xE4n pit\\xE4\\xE4 ensin muuttaa ik\\xE4 kokonaisluvuksi (tuttu komento Convert.ToInt32).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"int sum = 0;\\n\\nwhile (true)\\n{\\n  string input = Console.ReadLine();\\n  if (input == \\\"\\\")\\n  {\\n    break;\\n  }\\n  string[] parts = input.Split(\\\",\\\");\\n  sum = sum + Convert.ToInt32(parts[1]);\\n}\\nConsole.WriteLine(\\\"Sum of the ages is \\\" + sum);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> sebastian,2 \\n> lucas,2 \\n> lily,1\\n\\nSum of the ages is 5\\n\")), mdx(\"p\", null, \"Voimme kirjoittaa ohjelman my\\xF6s niin, ett\\xE4 se laskee keskiarvon. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"int sum = 0;\\nint count = 0;\\n\\nwhile (true)\\n{\\n  string input = Console.ReadLine();\\n  if (input == \\\"\\\")\\n  {\\n    break;\\n  }\\n  string[] parts = input.Split(\\\",\\\");\\n  sum = sum + Convert.ToInt32(parts[1]);\\n  count++;\\n}\\nif (count > 0)\\n{\\n  Console.WriteLine(\\\"Age average: \\\" + ((double)sum / count));\\n}\\nelse\\n{\\n  Console.WriteLine(\\\"No input\\\");\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> sebastian,2\\n> lucas,2\\n> lily,1\\n\\nAge average: 1.6666666666666667\\n\")), mdx(\"h1\", {\n    \"id\": \"teht채v채t\"\n  }, \"Teht\\xE4v\\xE4t\"), mdx(Exercise, {\n    title: '022 String three times',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma, joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 merkkijonon ja tulostaa sen kolme kertaa per\\xE4kk\\xE4in.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Give a word: cake\\n\\ncakecakecake\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Ohjelman tulisi kysy\\xE4 merkkijonoa vain kerran. \\xC4l\\xE4 k\\xE4yt\\xE4 silmukkaa t\\xE4ss\\xE4.\")), mdx(Exercise, {\n    title: '023 True string',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma, joka kysyy k\\xE4ytt\\xE4j\\xE4lt\\xE4 merkkijonon. Jos k\\xE4ytt\\xE4j\\xE4 kirjoittaa merkkijonon \\\"true\\\", ohjelma tulostaa \\\"You got it right!\\\", muussa tapauksessa ohjelma tulostaa \\\"Try again!\\\".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Give a string: true \\nYou got it right!\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Give a string: trueish \\nTry again!\\n\"))), mdx(Exercise, {\n    title: '024 Login',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka tunnistaa seuraavat k\\xE4ytt\\xE4j\\xE4t:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"k\\xE4ytt\\xE4j\\xE4nimi\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"salasana\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"alex\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"sunshine\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"emma\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"haskell\")))), mdx(\"p\", null, \"Ohjelman pit\\xE4isi n\\xE4ytt\\xE4\\xE4 joko kirjautumisviesti tai ilmoitus virheellisest\\xE4 k\\xE4ytt\\xE4j\\xE4nimest\\xE4 tai salasanasta.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Enter username: \\n>alex \\nEnter password: \\n> sunshine \\nYou have successfully logged in!\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Enter username: \\n> emma \\nEnter password: \\n> haskell \\nYou have successfully logged in!\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Enter username: \\n> alex \\nEnter password: \\n> haskell \\nIncorrect username or password!\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Todellisuudessa kirjautuminen ei toimi n\\xE4in! T\\xE4m\\xE4 on vain harjoitus.\")), mdx(Exercise, {\n    title: '025 String split',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 merkkijonoja. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 tyhj\\xE4n merkkijonon, ohjelma lopettaa lukemisen ja ohjelman suoritus p\\xE4\\xE4ttyy. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 muun merkkijonon, ohjelma jakaa merkkijonon v\\xE4lily\\xF6ntien kohdalta ja tulostaa osat yksi kerrallaan.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> once upon a time \\nonce \\nupon \\na \\ntime \\n> a little program \\na \\nlittle \\nprogram \\n> halted \\nhalted\\n>\\n\"))), mdx(Exercise, {\n    title: '026 Split contains av',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma, joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 merkkijonoja. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 tyhj\\xE4n merkkijonon, ohjelma lopettaa lukemisen. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 muun merkkijonon, ohjelma jakaa merkkijonon v\\xE4lily\\xF6ntien kohdalta ja tulostaa osat, jotka sis\\xE4lt\\xE4v\\xE4t merkkijonon \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"av\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> navy blue shirt\\nnavy\\n> Do you have a favourite flavour\\nhave\\nfavourite\\nflavour\\n> was that a cat\\n>\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Merkkijonolla on Contains-metodi, joka kertoo, sis\\xE4lt\\xE4\\xE4k\\xF6 merkkijono toisen merkkijonon. Se toimii n\\xE4in:\", mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string text = \\\"volcanologist\\\";\\n\\nif (text.Contains(\\\"can\\\")) \\n{\\n  Console.WriteLine(\\\"can was found\\\");\\n}\\n\\nif (!text.Contains(\\\"tin\\\")) \\n{\\n  Console.WriteLine(\\\"tin wasn't found\\\");\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"can was found \\ntin wasn't found\\n\")))), mdx(Exercise, {\n    title: '027 First part split',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 merkkijonoja. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 tyhj\\xE4n merkkijonon, ohjelma lopettaa lukemisen. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 muun merkkijonon, ohjelma jakaa merkkijonon v\\xE4lily\\xF6ntien kohdalta ja tulostaa ensimm\\xE4isen osan.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> one two three four \\none \\n> this is a very important message \\nthis\\n>\\n\"))), mdx(Exercise, {\n    title: '028 Last part split',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 merkkijonoja. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 tyhj\\xE4n merkkijonon, ohjelma lopettaa lukemisen. Jos k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 muun merkkijonon, ohjelma jakaa merkkijonon v\\xE4lily\\xF6ntien kohdalta ja tulostaa viimeisen osan.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> one two three four \\nfour \\n> this is a very important message \\nmessage\\n>\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"L\\xF6yd\\xE4t taulukon pituuden Length-metodilla. Se toimii n\\xE4in:\", mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string[] parts = {\\\"one\\\", \\\"two\\\", \\\"three\\\"};\\nConsole.WriteLine(\\\"Number of parts: \\\" + parts.Length);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Number of parts: 3\\n\")))), mdx(Exercise, {\n    title: '029 CSV age',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 nimi\\xE4 ja iki\\xE4 kunnes k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 tyhj\\xE4n merkkijonon. Nimi ja ik\\xE4 on erotettu pilkulla.\"), mdx(\"p\", null, \"Lukemisen j\\xE4lkeen ohjelma tulostaa vanhimman henkil\\xF6n i\\xE4n. Voit olettaa, ett\\xE4 k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 ainakin yhden henkil\\xF6n ja ett\\xE4 ainakin yksi henkil\\xF6 on vanhempi kuin muut.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> sebastian,2 \\n> lucas,2\\n> lily,1\\n> hanna,5\\n> gabriel,10\\n>\\nAge of the oldest: 10\\n\"))), mdx(Exercise, {\n    title: '030 CSV name',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 nimi\\xE4 ja iki\\xE4 kunnes k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 tyhj\\xE4n merkkijonon. Nimi ja ik\\xE4 on erotettu pilkulla.\"), mdx(\"p\", null, \"Lukemisen j\\xE4lkeen ohjelma tulostaa vanhimman henkil\\xF6n nimen. Voit olettaa, ett\\xE4 k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 ainakin yhden henkil\\xF6n ja ett\\xE4 ainakin yksi henkil\\xF6 on vanhempi kuin muut.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> sebastian,2 \\n> lucas,2\\n> lily,1\\n> hanna,5\\n> gabriel,10\\n>\\nName of the oldest: gabriel\\n\"))), mdx(Exercise, {\n    title: '031 Maximum name and age',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Kirjoita ohjelma joka lukee k\\xE4ytt\\xE4j\\xE4lt\\xE4 nimi\\xE4 ja syntym\\xE4vuosia kunnes k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 tyhj\\xE4n merkkijonon. Nimi ja syntym\\xE4vuosi on erotettu pilkulla.\"), mdx(\"p\", null, \"Lukemisen j\\xE4lkeen ohjelma tulostaa pisimm\\xE4n nimen ja korkeimman i\\xE4n. Jos useilla henkil\\xF6ill\\xE4 on yht\\xE4 pitk\\xE4 nimi, voit tulostaa mink\\xE4 tahansa niist\\xE4. Voit olettaa, ett\\xE4 k\\xE4ytt\\xE4j\\xE4 sy\\xF6tt\\xE4\\xE4 ainakin yhden henkil\\xF6n, ja meneill\\xE4\\xE4n on t\\xE4m\\xE4 vuosi.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"> sebastian,2017 \\n> lucas,2017 \\n> lily,2017 \\n> hanna,2014 \\n> gabriel,2009\\n>\\nLongest name: sebastian \\nHighest age: 11\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#merkkijonon-lukeminen-ja-tulostaminen","title":"Merkkijonon lukeminen ja tulostaminen"},{"url":"#merkkijonojen-vertailu","title":"Merkkijonojen vertailu"},{"url":"#merkkijonon-jakaminen","title":"Merkkijonon jakaminen"},{"url":"#kiinte채n-muotoisen-datan-k채sittely","title":"Kiinte채n muotoisen datan k채sittely"},{"url":"#monimuotoisen-tekstin-k채ytt채minen","title":"Monimuotoisen tekstin k채ytt채minen"}]},{"url":"#teht채v채t","title":"Teht채v채t"}]},"frontmatter":{"title":"Merkkijonot"}}},"pageContext":{"id":"73b5e01f-6c8a-5e8d-b24b-30ad00a4fff4"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}